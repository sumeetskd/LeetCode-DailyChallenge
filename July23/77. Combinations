class Solution {
    List<List<Integer>> res = new ArrayList<>();
    public List<List<Integer>> combine(int n, int k) {
        List<Integer> temp = new ArrayList<>();
        dfs(1, n, k, temp);
        return res;
    }

    public void dfs(int i, int n, int k, List<Integer> cur){
        //base case
        if(k==0){
            res.add(new ArrayList<>(cur));
            return;
        }
        if(i > n){
            return;
        }
        dfs(i+1, n, k, cur);
        cur.add(i);
        dfs(i+1, n, k-1, cur);
        cur.remove(cur.size()-1);
    }
}
