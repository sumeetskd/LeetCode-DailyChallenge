class Solution {
    public int search(int[] nums, int target) {
        int p = -1;
        for(int i = 1; i<nums.length; i++){
            if(nums[i]<nums[i-1]){
                p = i;
                break;
            }
        }
        //dividing in two partitions
        if(p == -1){
            if(binarySearch(nums, target, 0, nums.length - 1) == -1){
                return -1;
            }
            return binarySearch(nums, target, 0, nums.length - 1);
        }
        int x = binarySearch(nums, target, 0, p-1);
        int y = binarySearch(nums, target, p, nums.length - 1);
        if(x != -1)
            return x;
        if(y != -1)
            return y;
        return -1;
    }
    public int binarySearch(int nums[], int target, int l, int r){
        while(l<=r){
            int m = l + (r-l)/2;
            if(nums[m] == target){
                return m;
            }
            else if(nums[m] > target){
                r = m - 1;
            }else{
                l = m + 1;
            }
        }
        return -1;
    }
}
